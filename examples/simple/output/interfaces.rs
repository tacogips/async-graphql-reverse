// DO NOT EDIT THIS FILE
// This file was generated by https://github.com/tacogips/async-graphql-reverse
use super::objects::Friend;
use async_graphql::*;

#[derive(Enum, Copy, Clone, Debug, Eq, PartialEq)]
pub enum UserType {
    NotPayed,
    Payed,
}

#[derive(Interface)]
#[graphql(
    field(name = "id", type = "ID"),
    field(name = "type", type = "Option <UserType>")
)]
#[derive(Debug, Clone)]
pub enum User {
    Friend(Friend),
    Me(Me),
}

#[derive(Debug, Clone)]
pub struct Me {
    pub id: ID,
    pub email: Option<String>,
}

#[Object]
impl Me {
    pub async fn id(&self) -> ID {
        self.id.clone()
    }
    pub async fn r#type(&self, ctx: &Context<'_>) -> Result<Option<UserType>> {
        unimplemented!()
    }
    pub async fn email(&self) -> Option<String> {
        self.email.clone()
    }
}

//enum UserType {
//  NotPayed
//  Payed
//}
//
//interface User {
//  id: ID!
//  type: UserType
//}
//
//type Me implements User {
//  id: ID!
//  type: UserType
//  email: String
//}
//
